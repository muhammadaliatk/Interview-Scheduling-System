// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id         Int          @id @default(autoincrement())
  username   String
  email      String       @unique
  password   String
  firstName  String?
  lastName   String?
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  interviews interviews[]
}

model interviews {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      users    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  title     String?
  link      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  slots     slots[]
}

model slots {
  id          Int        @id @default(autoincrement())
  interviewId Int
  interviews  interviews @relation(fields: [interviewId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  startTime   DateTime
  endTime     DateTime
  isBooked    Boolean    @default(false)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  bookings    bookings[]
}

model candidates {
  id        Int        @id @default(autoincrement())
  username  String
  email     String     @unique
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  bookings  bookings[]
}

model bookings {
  slotId      Int
  slots       slots      @relation(fields: [slotId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  candidateId Int
  candidates  candidates @relation(fields: [candidateId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  @@id([slotId,candidateId])
}
